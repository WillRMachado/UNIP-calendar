services:
  gpt:
    build: ./backend/ms_gpt
    container_name: ms-gpt
    ports:
      - "10002:10002"
    volumes:
      - ./backend/ms_gpt:/usr/src/app
    environment:
      - NODE_ENV=development
    networks:
      - bridge-network

  mongo:
    build: ./backend/ms_mongo
    container_name: ms-mongo
    ports:
      - "10001:10001"
    volumes:
      - ./backend/ms_mongo:/usr/src/app
    environment:
      - NODE_ENV=development

  orchestrator:
    build: ./backend/orchestrator
    container_name: ms-orquestrador
    ports:
      - "10000:10000"
    volumes:
      - ./backend/orchestrator:/usr/src/app
    environment:
      - HOST_DOCKER=host.docker.internal
      - NODE_ENV=development
    networks:
      - bridge-network
    depends_on:
      - gpt
      - mongo
  
  frontend:
    container_name: ms-frontend
    build:
      context: ./frontend/unipcal
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/unipcal:/app
    environment:
      - NODE_ENV=development
      - REACT_APP_HOST_DOCKER=host.docker.internal
    command: npm start
    working_dir: /app
    networks:
      - bridge-network
    depends_on:
      - gpt
      - mongo
      - orchestrator

  kafka:
    image: bitnami/kafka:latest
    restart: on-failure
    ports:
      - 9092:9092
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_NUM_PARTITIONS=3
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - bridge-network
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - bridge-network

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=unip
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    networks:
      - bridge-network

volumes:
  mongo-data:

networks:
  bridge-network:
    driver: bridge
